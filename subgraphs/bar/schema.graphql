# Bar
type Bar @entity {
  # Contract address
  id: ID!

  # Decimals
  decimals: Int!

  # Name
  name: String!

  # Ruby token
  ruby: Bytes!

  # Symbol
  symbol: String!

  # Total xRuby supply
  totalSupply: BigDecimal!

  # Ratio xRuby per Ruby
  ratio: BigDecimal!

  # xRuby minted
  xRubyMinted: BigDecimal!

  # xRuby burned
  xRubyBurned: BigDecimal!

  # Ruby staked
  rubyStaked: BigDecimal!

  # Ruby staked USD
  rubyStakedUSD: BigDecimal!

  # Ruby harvested
  rubyHarvested: BigDecimal!

  # Ruby harvested USD
  rubyHarvestedUSD: BigDecimal!

  # xRuby age
  xRubyAge: BigDecimal!

  # xRuby age destroyed
  xRubyAgeDestroyed: BigDecimal!

  # Users in the bar
  users: [User!]! @derivedFrom(field: "bar")

  # Updated at
  updatedAt: BigInt!
}

# User
type User @entity {
  # ID
  id: ID!

  # Bar
  bar: Bar

  # xRuby (balance)
  xRuby: BigDecimal!

  # xRuby In
  xRubyIn: BigDecimal!

  # xRuby Out
  xRubyOut: BigDecimal!

  # Minted
  xRubyMinted: BigDecimal!

  # Burned
  xRubyBurned: BigDecimal!

  # xRuby offset
  xRubyOffset: BigDecimal!

  # xRuby age
  xRubyAge: BigDecimal!

  # xRuby age destroyed
  xRubyAgeDestroyed: BigDecimal!

  # Staked
  rubyStaked: BigDecimal!

  # Sum of $ at time of staking
  rubyStakedUSD: BigDecimal!

  # Harvested
  rubyHarvested: BigDecimal!

  # Sum of $ at time of harvesting
  rubyHarvestedUSD: BigDecimal!

  # To get bar pending ruby (xRuby * staked / bar.totalSupply)

  # Ruby Out
  rubyOut: BigDecimal!

  # Ruby In
  rubyIn: BigDecimal!

  # USD Out
  usdOut: BigDecimal!

  # USD In
  usdIn: BigDecimal!

  # Updated at
  updatedAt: BigInt!

  # ruby offset
  rubyOffset: BigDecimal!

  # usd offset
  usdOffset: BigDecimal!
}

# History
enum Timeframe {
  Day
}

type History @entity {
  id: ID!
  date: Int!
  timeframe: Timeframe!
  rubyStaked: BigDecimal!
  rubyStakedUSD: BigDecimal!
  rubyHarvested: BigDecimal!
  rubyHarvestedUSD: BigDecimal!
  xRubyAge: BigDecimal!
  xRubyAgeDestroyed: BigDecimal!
  xRubyMinted: BigDecimal!
  xRubyBurned: BigDecimal!
  xRubySupply: BigDecimal!
  ratio: BigDecimal!
}
